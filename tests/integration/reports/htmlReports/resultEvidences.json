{
  "stats": {
    "suites": 9,
    "tests": 17,
    "passes": 17,
    "pending": 0,
    "failures": 0,
    "start": "2019-06-14T05:43:37.516Z",
    "end": "2019-06-14T05:43:41.965Z",
    "duration": 4449,
    "testsRegistered": 17,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "43c4af05-893f-4d46-b7e1-e23347eaa65d",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "da095d7b-8b1b-45c9-bb10-b6e20c92215e",
          "title": "GET: /tasks",
          "fullFile": "C:\\Users\\bhenriquea\\Desktop\\testes node\\livro-api-nodejs\\Ntask\\tests\\integration\\tasks.spec.js",
          "file": "\\tests\\integration\\tasks.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "GET: /tasks \"before each\" hook",
              "timedOut": false,
              "duration": 424,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_18egqiqfb4.f[2]++;cov_18egqiqfb4.s[10]++;Users.destroy({where:{}}).then(async()=>{cov_18egqiqfb4.f[3]++;const[user]=(cov_18egqiqfb4.s[11]++,await Promise.all([Users.create({name:'bruno h afonso',email:'brunohafonso@gmail.com',password:'123456'}),Tasks.destroy({where:{}})]));cov_18egqiqfb4.s[12]++;Tasks.bulkCreate([{id:1,title:'work',user_id:user.id},{id:2,title:'study',user_id:user.id}]).then(async tasks=>{cov_18egqiqfb4.f[4]++;cov_18egqiqfb4.s[13]++;fakeTest=tasks[0];cov_18egqiqfb4.s[14]++;token=await(0,_token.generateToken)({id:user.id,email:user.email});cov_18egqiqfb4.s[15]++;done();});});",
              "err": {},
              "uuid": "2b650971-f82d-4503-b23e-c30a9dea36c9",
              "parentUUID": "da095d7b-8b1b-45c9-bb10-b6e20c92215e",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "status 200 - \n  should return a list with two tasks",
              "fullTitle": "GET: /tasks status 200 - \n  should return a list with two tasks",
              "timedOut": false,
              "duration": 72,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_18egqiqfb4.f[5]++;cov_18egqiqfb4.s[17]++;request.get('/tasks').set('Authorization',`Bearer ${token}`).expect(200).end((err,response)=>{cov_18egqiqfb4.f[6]++;cov_18egqiqfb4.s[18]++;(0,_chai.expect)(response.body.tasks).have.length(2);cov_18egqiqfb4.s[19]++;(0,_chai.expect)(response.body.tasks[0].title).to.be.equal('work');cov_18egqiqfb4.s[20]++;(0,_chai.expect)(response.body.tasks[1].title).to.be.equal('study');cov_18egqiqfb4.s[21]++;done(err);});",
              "err": {},
              "uuid": "0ddef875-6be5-4476-80d2-ae125dab9448",
              "parentUUID": "da095d7b-8b1b-45c9-bb10-b6e20c92215e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "status 401 - \n  when user is not authenticated",
              "fullTitle": "GET: /tasks status 401 - \n  when user is not authenticated",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_18egqiqfb4.f[7]++;cov_18egqiqfb4.s[23]++;request.get('/tasks').expect(401).end(err=>{cov_18egqiqfb4.f[8]++;cov_18egqiqfb4.s[24]++;return done(err);});",
              "err": {},
              "uuid": "22a9ec46-d103-4aaf-bb3b-839060e30579",
              "parentUUID": "da095d7b-8b1b-45c9-bb10-b6e20c92215e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0ddef875-6be5-4476-80d2-ae125dab9448",
            "22a9ec46-d103-4aaf-bb3b-839060e30579"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 78,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "4023d0c1-3472-4799-9d66-b50a73690178",
          "title": "GET: /tasks/:id",
          "fullFile": "C:\\Users\\bhenriquea\\Desktop\\testes node\\livro-api-nodejs\\Ntask\\tests\\integration\\tasks.spec.js",
          "file": "\\tests\\integration\\tasks.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "status 200 - should return a task",
              "fullTitle": "GET: /tasks/:id status 200 - should return a task",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_18egqiqfb4.f[10]++;cov_18egqiqfb4.s[27]++;request.get(`/tasks/${fakeTest.id}`).set('Authorization',`Bearer ${token}`).expect(200).end((err,response)=>{cov_18egqiqfb4.f[11]++;cov_18egqiqfb4.s[28]++;(0,_chai.expect)(response.body.task.title).to.be.equal('work');cov_18egqiqfb4.s[29]++;done(err);});",
              "err": {},
              "uuid": "cfd9cf57-a7c1-4b24-9c55-fc0935a20b56",
              "parentUUID": "4023d0c1-3472-4799-9d66-b50a73690178",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "status 404 - should return a message of not found",
              "fullTitle": "GET: /tasks/:id status 404 - should return a message of not found",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_18egqiqfb4.f[12]++;cov_18egqiqfb4.s[31]++;request.get('/tasks/0').set('Authorization',`Bearer ${token}`).expect(404).end((err,response)=>{cov_18egqiqfb4.f[13]++;cov_18egqiqfb4.s[32]++;(0,_chai.expect)(response.body).to.include.keys('message');cov_18egqiqfb4.s[33]++;(0,_chai.expect)(response.body.message).to.be.equal('task not found');cov_18egqiqfb4.s[34]++;done(err);});",
              "err": {},
              "uuid": "5db27441-5adc-4a99-88e5-b50226187c22",
              "parentUUID": "4023d0c1-3472-4799-9d66-b50a73690178",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cfd9cf57-a7c1-4b24-9c55-fc0935a20b56",
            "5db27441-5adc-4a99-88e5-b50226187c22"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 21,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "6529e5f6-919c-447e-bf25-757de114c11d",
          "title": "PUT: /tasks/:id",
          "fullFile": "C:\\Users\\bhenriquea\\Desktop\\testes node\\livro-api-nodejs\\Ntask\\tests\\integration\\tasks.spec.js",
          "file": "\\tests\\integration\\tasks.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "status 204 - should return nothing",
              "fullTitle": "PUT: /tasks/:id status 204 - should return nothing",
              "timedOut": false,
              "duration": 222,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_18egqiqfb4.f[15]++;cov_18egqiqfb4.s[37]++;request.put(`/tasks/${fakeTest.id}`).set('Authorization',`Bearer ${token}`).send({title:'travel',done:true}).expect(204).end(err=>{cov_18egqiqfb4.f[16]++;cov_18egqiqfb4.s[38]++;return done(err);});",
              "err": {},
              "uuid": "8b1b11bd-5546-48f7-888a-b975d138272e",
              "parentUUID": "6529e5f6-919c-447e-bf25-757de114c11d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8b1b11bd-5546-48f7-888a-b975d138272e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 222,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "d485c875-7c4f-43c5-9205-3e0e13c246e9",
          "title": "DELETE: /tasks/:id",
          "fullFile": "C:\\Users\\bhenriquea\\Desktop\\testes node\\livro-api-nodejs\\Ntask\\tests\\integration\\tasks.spec.js",
          "file": "\\tests\\integration\\tasks.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "status 204 - should return the status 204",
              "fullTitle": "DELETE: /tasks/:id status 204 - should return the status 204",
              "timedOut": false,
              "duration": 118,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_18egqiqfb4.f[18]++;cov_18egqiqfb4.s[41]++;request.delete(`/tasks/${fakeTest.id}`).set('Authorization',`Bearer ${token}`).expect(204).end(err=>{cov_18egqiqfb4.f[19]++;cov_18egqiqfb4.s[42]++;return done(err);});",
              "err": {},
              "uuid": "cc00406e-7bbf-4f45-a409-92cbfda0bafa",
              "parentUUID": "d485c875-7c4f-43c5-9205-3e0e13c246e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "status 401 - \n  when user is not authenticated",
              "fullTitle": "DELETE: /tasks/:id status 401 - \n  when user is not authenticated",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_18egqiqfb4.f[20]++;cov_18egqiqfb4.s[44]++;request.get('/tasks').expect(401).end(err=>{cov_18egqiqfb4.f[21]++;cov_18egqiqfb4.s[45]++;return done(err);});",
              "err": {},
              "uuid": "27a2a6e1-53d4-437f-96d2-cc9ed5ae15c7",
              "parentUUID": "d485c875-7c4f-43c5-9205-3e0e13c246e9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cc00406e-7bbf-4f45-a409-92cbfda0bafa",
            "27a2a6e1-53d4-437f-96d2-cc9ed5ae15c7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 123,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "6453dc05-9df1-414b-a8ae-439030e3c044",
          "title": "POST /login",
          "fullFile": "C:\\Users\\bhenriquea\\Desktop\\testes node\\livro-api-nodejs\\Ntask\\tests\\integration\\users.spec.js",
          "file": "\\tests\\integration\\users.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "POST /login \"before each\" hook",
              "timedOut": false,
              "duration": 357,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_oenp07420.f[2]++;cov_oenp07420.s[9]++;Users.destroy({where:{}}).then(async()=>{cov_oenp07420.f[3]++;cov_oenp07420.s[10]++;await Users.create({name:'brunohafonso',email:'brunohafonso@gmail.com',password:'123456'});cov_oenp07420.s[11]++;done();});",
              "err": {},
              "uuid": "dd7d6d89-82ba-4daf-97d3-6672b66090ca",
              "parentUUID": "6453dc05-9df1-414b-a8ae-439030e3c044",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "POST /login \"after all\" hook",
              "timedOut": false,
              "duration": 148,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_oenp07420.f[4]++;cov_oenp07420.s[13]++;Users.destroy({where:{}}).then(()=>{cov_oenp07420.f[5]++;cov_oenp07420.s[14]++;return done();});",
              "err": {},
              "uuid": "055928d9-1e69-4ba2-aabe-bb73a8020204",
              "parentUUID": "6453dc05-9df1-414b-a8ae-439030e3c044",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "status 200 correct credentials - \n    should return the token of authenticated user",
              "fullTitle": "POST /login status 200 correct credentials - \n    should return the token of authenticated user",
              "timedOut": false,
              "duration": 90,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_oenp07420.f[6]++;cov_oenp07420.s[16]++;request.post('/login').send({email:'brunohafonso@gmail.com',password:'123456'}).expect(200).end((error,response)=>{cov_oenp07420.f[7]++;cov_oenp07420.s[17]++;(0,_chai.expect)(response.body).to.include.keys('token');cov_oenp07420.s[18]++;done(error);});",
              "err": {},
              "uuid": "0906f710-8e2a-468d-bac2-4d4399fa1413",
              "parentUUID": "6453dc05-9df1-414b-a8ae-439030e3c044",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "status 400 empty credentials - \n    should return error message when the email or password is blank",
              "fullTitle": "POST /login status 400 empty credentials - \n    should return error message when the email or password is blank",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_oenp07420.f[8]++;cov_oenp07420.s[20]++;request.post('/login').send({email:'',password:''}).expect(400).end((error,response)=>{cov_oenp07420.f[9]++;cov_oenp07420.s[21]++;(0,_chai.expect)(response.body).to.include.keys('message');cov_oenp07420.s[22]++;(0,_chai.expect)(response.body.message).to.be.equal('You need to inform the credentials correctly');cov_oenp07420.s[23]++;done(error);});",
              "err": {},
              "uuid": "b2aab8d8-0d5b-40d4-ad28-f046028b5d64",
              "parentUUID": "6453dc05-9df1-414b-a8ae-439030e3c044",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "status 200 wrong password - \n  should return error message when the password is wrong",
              "fullTitle": "POST /login status 200 wrong password - \n  should return error message when the password is wrong",
              "timedOut": false,
              "duration": 88,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_oenp07420.f[10]++;cov_oenp07420.s[25]++;request.post('/login').send({email:'brunohafonso@gmail.com',password:'12'}).expect(200).end((error,response)=>{cov_oenp07420.f[11]++;cov_oenp07420.s[26]++;(0,_chai.expect)(response.body).to.include.keys('message');cov_oenp07420.s[27]++;(0,_chai.expect)(response.body.message).to.be.equal('User or password incorrect');cov_oenp07420.s[28]++;done(error);});",
              "err": {},
              "uuid": "bcfa71bb-0947-4c51-878b-9c43fe5bb5c5",
              "parentUUID": "6453dc05-9df1-414b-a8ae-439030e3c044",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "status 404 credentials that does not exist - \n    should return error when the email informed does not exist",
              "fullTitle": "POST /login status 404 credentials that does not exist - \n    should return error when the email informed does not exist",
              "timedOut": false,
              "duration": 26,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_oenp07420.f[12]++;cov_oenp07420.s[30]++;request.post('/login').send({email:'brunohafonso@gmai.com',password:'12'}).expect(404).end((error,response)=>{cov_oenp07420.f[13]++;cov_oenp07420.s[31]++;(0,_chai.expect)(response.body).to.include.keys('message');cov_oenp07420.s[32]++;(0,_chai.expect)(response.body.message).to.be.equal('user not found');cov_oenp07420.s[33]++;done(error);});",
              "err": {},
              "uuid": "9c8635fb-489d-4810-be00-f5c33ea6a348",
              "parentUUID": "6453dc05-9df1-414b-a8ae-439030e3c044",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0906f710-8e2a-468d-bac2-4d4399fa1413",
            "b2aab8d8-0d5b-40d4-ad28-f046028b5d64",
            "bcfa71bb-0947-4c51-878b-9c43fe5bb5c5",
            "9c8635fb-489d-4810-be00-f5c33ea6a348"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 209,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "4893d30e-0349-4259-aa1d-02545effa6c9",
          "title": "POST /users",
          "fullFile": "C:\\Users\\bhenriquea\\Desktop\\testes node\\livro-api-nodejs\\Ntask\\tests\\integration\\users.spec.js",
          "file": "\\tests\\integration\\users.spec.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "POST /users \"after all\" hook",
              "timedOut": false,
              "duration": 115,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_oenp07420.f[15]++;cov_oenp07420.s[36]++;Users.destroy({where:{}}).then(()=>{cov_oenp07420.f[16]++;cov_oenp07420.s[37]++;return done();});",
              "err": {},
              "uuid": "f237bfe9-031e-4739-a10e-2b2e0ef2276d",
              "parentUUID": "4893d30e-0349-4259-aa1d-02545effa6c9",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "status 201 correct user data - \n  should return the user inserted on db",
              "fullTitle": "POST /users status 201 correct user data - \n  should return the user inserted on db",
              "timedOut": false,
              "duration": 218,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_oenp07420.f[17]++;cov_oenp07420.s[39]++;request.post('/users').send({name:'bruno h afonso',email:'brunohafonso@gmail.com',password:'123456'}).expect(201).end((error,response)=>{cov_oenp07420.f[18]++;cov_oenp07420.s[40]++;(0,_chai.expect)(response.body).to.include.keys('user');cov_oenp07420.s[41]++;done(error);});",
              "err": {},
              "uuid": "a3c21b31-c56e-4e9d-b535-11c30670d9c3",
              "parentUUID": "4893d30e-0349-4259-aa1d-02545effa6c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "status 412 wrong user data - \n  should return an error message",
              "fullTitle": "POST /users status 412 wrong user data - \n  should return an error message",
              "timedOut": false,
              "duration": 18,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_oenp07420.f[19]++;cov_oenp07420.s[43]++;request.post('/users').send({name:'',email:'',password:''}).expect(412).end((error,response)=>{cov_oenp07420.f[20]++;cov_oenp07420.s[44]++;(0,_chai.expect)(response.body).to.include.keys('message');cov_oenp07420.s[45]++;(0,_chai.expect)(response.body.message).to.contains('Error to create user');cov_oenp07420.s[46]++;done(error);});",
              "err": {},
              "uuid": "68bbbc3a-03cf-40d3-b596-3f4d1df50a30",
              "parentUUID": "4893d30e-0349-4259-aa1d-02545effa6c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "status 412 invalid email - \n  should return an error message",
              "fullTitle": "POST /users status 412 invalid email - \n  should return an error message",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_oenp07420.f[21]++;cov_oenp07420.s[48]++;request.post('/users').send({name:'',email:'brunohafonso.gmail.com',password:''}).expect(412).end((error,response)=>{cov_oenp07420.f[22]++;cov_oenp07420.s[49]++;(0,_chai.expect)(response.body).to.include.keys('message');cov_oenp07420.s[50]++;(0,_chai.expect)(response.body.message).to.contains('The email you entered is invalid or is already in our system');cov_oenp07420.s[51]++;done(error);});",
              "err": {},
              "uuid": "60888739-f35c-44cc-864b-8286708c09fd",
              "parentUUID": "4893d30e-0349-4259-aa1d-02545effa6c9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a3c21b31-c56e-4e9d-b535-11c30670d9c3",
            "68bbbc3a-03cf-40d3-b596-3f4d1df50a30",
            "60888739-f35c-44cc-864b-8286708c09fd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 243,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "26750b52-141f-4344-8892-a8c784e9befd",
          "title": "GET /user",
          "fullFile": "C:\\Users\\bhenriquea\\Desktop\\testes node\\livro-api-nodejs\\Ntask\\tests\\integration\\users.spec.js",
          "file": "\\tests\\integration\\users.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "GET /user \"before each\" hook",
              "timedOut": false,
              "duration": 198,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_oenp07420.f[24]++;cov_oenp07420.s[54]++;Users.destroy({where:{}}).then(async()=>{cov_oenp07420.f[25]++;const user=(cov_oenp07420.s[55]++,await Users.create({name:'brunohafonso',email:'brunohafonso@gmail.com',password:'123456'}));cov_oenp07420.s[56]++;token=await(0,_token.generateToken)({id:user.id,email:user.email});cov_oenp07420.s[57]++;done();});",
              "err": {},
              "uuid": "a29862e4-0dc7-42c4-9e13-983e3d4bf7c5",
              "parentUUID": "26750b52-141f-4344-8892-a8c784e9befd",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "status 200 - should return an authenticated user",
              "fullTitle": "GET /user status 200 - should return an authenticated user",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_oenp07420.f[26]++;cov_oenp07420.s[59]++;request.get('/user').set('Authorization',`Bearer ${token}`).expect(200).end((err,response)=>{cov_oenp07420.f[27]++;cov_oenp07420.s[60]++;(0,_chai.expect)(response.body).to.include.keys('user');cov_oenp07420.s[61]++;(0,_chai.expect)(response.body.user.name).to.be.equal('brunohafonso');cov_oenp07420.s[62]++;done(err);});",
              "err": {},
              "uuid": "d7b6f115-7077-4791-b7c2-39e4bc4f74e9",
              "parentUUID": "26750b52-141f-4344-8892-a8c784e9befd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d7b6f115-7077-4791-b7c2-39e4bc4f74e9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "ad0d8450-29b8-41e6-9c68-9b6b7b15f877",
          "title": "DELETE /user",
          "fullFile": "C:\\Users\\bhenriquea\\Desktop\\testes node\\livro-api-nodejs\\Ntask\\tests\\integration\\users.spec.js",
          "file": "\\tests\\integration\\users.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "DELETE /user \"before each\" hook",
              "timedOut": false,
              "duration": 289,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_oenp07420.f[29]++;cov_oenp07420.s[65]++;Users.destroy({where:{}}).then(async()=>{cov_oenp07420.f[30]++;const user=(cov_oenp07420.s[66]++,await Users.create({name:'brunohafonso',email:'brunohafonso@gmail.com',password:'123456'}));cov_oenp07420.s[67]++;token=await(0,_token.generateToken)({id:user.id,email:user.email});cov_oenp07420.s[68]++;done();});",
              "err": {},
              "uuid": "f0874127-6385-48b3-af01-6098f5d429b3",
              "parentUUID": "ad0d8450-29b8-41e6-9c68-9b6b7b15f877",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "status 204 - should return nothing",
              "fullTitle": "DELETE /user status 204 - should return nothing",
              "timedOut": false,
              "duration": 112,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_oenp07420.f[31]++;cov_oenp07420.s[70]++;request.delete('/user').set('Authorization',`Bearer ${token}`).expect(204).end(err=>{cov_oenp07420.f[32]++;cov_oenp07420.s[71]++;return done(err);});",
              "err": {},
              "uuid": "044d10ed-7862-49e5-92ef-3e855af382f8",
              "parentUUID": "ad0d8450-29b8-41e6-9c68-9b6b7b15f877",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "044d10ed-7862-49e5-92ef-3e855af382f8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 112,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "c026b3d0-980b-46d2-a34c-055158b815fb",
          "title": "PUT /user",
          "fullFile": "C:\\Users\\bhenriquea\\Desktop\\testes node\\livro-api-nodejs\\Ntask\\tests\\integration\\users.spec.js",
          "file": "\\tests\\integration\\users.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "PUT /user \"before each\" hook",
              "timedOut": false,
              "duration": 209,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_oenp07420.f[34]++;cov_oenp07420.s[74]++;Users.destroy({where:{}}).then(async()=>{cov_oenp07420.f[35]++;const user=(cov_oenp07420.s[75]++,await Users.create({name:'brunohafonso',email:'brunohafonso@gmail.com',password:'123456'}));cov_oenp07420.s[76]++;token=await(0,_token.generateToken)({id:user.id,email:user.email});cov_oenp07420.s[77]++;done();});",
              "err": {},
              "uuid": "9c8cc661-7158-4962-8651-b0fb0cfc694d",
              "parentUUID": "c026b3d0-980b-46d2-a34c-055158b815fb",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "status 204 - should return nothing",
              "fullTitle": "PUT /user status 204 - should return nothing",
              "timedOut": false,
              "duration": 120,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_oenp07420.f[36]++;cov_oenp07420.s[79]++;request.put('/user').set('Authorization',`Bearer ${token}`).send({name:'brunoafonso',email:'brunohafonso@yahoo.com',password:'123456'}).expect(204).end(err=>{cov_oenp07420.f[37]++;cov_oenp07420.s[80]++;return done(err);});",
              "err": {},
              "uuid": "4dab3a44-1d16-4e10-b375-3b401e8f1775",
              "parentUUID": "c026b3d0-980b-46d2-a34c-055158b815fb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4dab3a44-1d16-4e10-b375-3b401e8f1775"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 120,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 5000
    }
  ],
  "meta": {
    "mocha": {
      "version": "6.1.4"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "resultEvidences",
        "saveHtml": true,
        "saveJson": true,
        "useInlineDiffs": false
      },
      "version": "4.0.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportTitle": "Ntask",
        "reportPageTitle": "Ntask",
        "reportDir": "tests/integration/reports/htmlReports",
        "reportFilename": "resultEvidences"
      },
      "version": "4.0.0"
    }
  }
}